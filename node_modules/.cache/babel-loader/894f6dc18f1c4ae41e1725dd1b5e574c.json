{"ast":null,"code":"var _jsxFileName = \"/Users/staschekhov/Desktop/Probnoe/test-delivery-products/src/components/List.jsx\",\n    _s = $RefreshSig$();\n\nimport ContactItems from \"./Items\";\nimport s from \"./Delivery.module.css\"; // import PropTypes from \"prop-types\";\n\nimport { useMemo } from \"react\";\nimport { getFilter } from \"redux/clickSlice\";\nimport { useSelector } from \"react-redux\";\nimport { useGetDeliveryQuery } from \"redux/deliveryApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactList = _ref => {\n  _s();\n\n  let {\n    handle\n  } = _ref;\n  const filter = useSelector(getFilter);\n  const {\n    data = [],\n    error,\n    isLoading\n  } = useGetDeliveryQuery();\n  const filteredContacts = useMemo(() => filter ? data.filter(contact => contact.name.includes(filter)) : data, [filter, data]); //  const filteredContacts = (data, filter) => {\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return data.filter((contact) =>\n  //    contact.name.toLowerCase().includes(normalizedFilter)\n  //   );\n  //  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: filteredContacts.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: s.contact,\n      children: /*#__PURE__*/_jsxDEV(ContactItems, {\n        id: e.id,\n        name: e.name,\n        from: e.from,\n        to: e.to,\n        radio: e.radio,\n        time: e.time,\n        comment: e.comment,\n        handle: handle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }, this)\n    }, e.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ContactList, \"5Mx0mXZDVQi+BKsMxZB4KNFQB/U=\", false, function () {\n  return [useSelector, useGetDeliveryQuery];\n});\n\n_c = ContactList;\nexport default ContactList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["/Users/staschekhov/Desktop/Probnoe/test-delivery-products/src/components/List.jsx"],"names":["ContactItems","s","useMemo","getFilter","useSelector","useGetDeliveryQuery","ContactList","handle","filter","data","error","isLoading","filteredContacts","contact","name","includes","map","e","id","from","to","radio","time","comment"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,SAAzB;AACA,OAAOC,CAAP,MAAc,uBAAd,C,CACA;;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,mBAApC;;;AAEA,MAAMC,WAAW,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AACnC,QAAMC,MAAM,GAAGJ,WAAW,CAACD,SAAD,CAA1B;AACA,QAAM;AAAEM,IAAAA,IAAI,GAAG,EAAT;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAAkCN,mBAAmB,EAA3D;AACA,QAAMO,gBAAgB,GAAGV,OAAO,CAC/B,MACCM,MAAM,GAAGC,IAAI,CAACD,MAAL,CAAaK,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBP,MAAtB,CAAzB,CAAH,GAA6DC,IAFrC,EAG/B,CAACD,MAAD,EAASC,IAAT,CAH+B,CAAhC,CAHmC,CAQnC;AACA;AACA;AACA;AACA;AACA;;AACA,sBACC;AAAA,cACEG,gBAAgB,CAACI,GAAjB,CAAsBC,CAAD,iBACrB;AAAe,MAAA,SAAS,EAAEhB,CAAC,CAACY,OAA5B;AAAA,6BACC,QAAC,YAAD;AACC,QAAA,EAAE,EAAEI,CAAC,CAACC,EADP;AAEC,QAAA,IAAI,EAAED,CAAC,CAACH,IAFT;AAGC,QAAA,IAAI,EAAEG,CAAC,CAACE,IAHT;AAIC,QAAA,EAAE,EAAEF,CAAC,CAACG,EAJP;AAKC,QAAA,KAAK,EAAEH,CAAC,CAACI,KALV;AAMC,QAAA,IAAI,EAAEJ,CAAC,CAACK,IANT;AAOC,QAAA,OAAO,EAAEL,CAAC,CAACM,OAPZ;AAQC,QAAA,MAAM,EAAEhB;AART;AAAA;AAAA;AAAA;AAAA;AADD,OAASU,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA,YADA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAkBA,CAhCD;;GAAMZ,W;UACUF,W,EACyBC,mB;;;KAFnCC,W;AAkCN,eAAeA,WAAf","sourcesContent":["import ContactItems from \"./Items\";\nimport s from \"./Delivery.module.css\";\n// import PropTypes from \"prop-types\";\nimport { useMemo } from \"react\";\nimport { getFilter } from \"redux/clickSlice\";\nimport { useSelector } from \"react-redux\";\nimport { useGetDeliveryQuery } from \"redux/deliveryApi\";\n\nconst ContactList = ({ handle }) => {\n const filter = useSelector(getFilter);\n const { data = [], error, isLoading } = useGetDeliveryQuery();\n const filteredContacts = useMemo(\n  () =>\n   filter ? data.filter((contact) => contact.name.includes(filter)) : data,\n  [filter, data]\n );\n //  const filteredContacts = (data, filter) => {\n //   const normalizedFilter = filter.toLowerCase();\n //   return data.filter((contact) =>\n //    contact.name.toLowerCase().includes(normalizedFilter)\n //   );\n //  };\n return (\n  <ul>\n   {filteredContacts.map((e) => (\n    <li key={e.id} className={s.contact}>\n     <ContactItems\n      id={e.id}\n      name={e.name}\n      from={e.from}\n      to={e.to}\n      radio={e.radio}\n      time={e.time}\n      comment={e.comment}\n      handle={handle}\n     />\n    </li>\n   ))}\n  </ul>\n );\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}