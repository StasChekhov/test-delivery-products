{"ast":null,"code":"var _jsxFileName = \"/Users/staschekhov/Desktop/Probnoe/test-delivery-products/src/components/Phonebook.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import PropTypes from \"prop-types\";\n\nimport s from \"./Phonebook.module.css\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport { useAddDeliveryMutation, useGetDeliveryQuery } from \"redux/deliveryApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Phonebook() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\"); //  const [number, setNumber] = useState(\"\");\n\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const {\n    data = [],\n    error,\n    isLoading,\n    refetch\n  } = useGetDeliveryQuery();\n  const [addContact, result] = useAddDeliveryMutation();\n\n  const onSaveContact = async () => {\n    const contact = {\n      name,\n      from,\n      to\n    };\n\n    if (data.find(item => item.name.toLowerCase() === contact.name.toLowerCase())) {\n      return alert(`Contact ${name} already exists`);\n    }\n\n    await addContact({\n      id: nanoid(),\n      name\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSaveContact();\n    setName(\"\");\n    setFrom(\"\");\n    setTo(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: s.form,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.div,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.label,\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          id: nanoid(),\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          placeholder: \"Ivan Dudka\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.label,\n          children: \"From\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          type: \"text\",\n          value: from,\n          onChange: e => setFrom(e.target.value),\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          placeholder: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.label,\n          children: \"To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          type: \"text\",\n          value: to,\n          onChange: e => setTo(e.target.value),\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          placeholder: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.checks,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"test1\",\n              name: \"radio-group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"test1\",\n              children: \"Apple\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"test2\",\n              name: \"radio-group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"test2\",\n              children: \"Peach\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"test3\",\n              name: \"radio-group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"test3\",\n              children: \"Orange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"test3\",\n              name: \"radio-group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"test3\",\n              children: \"Orange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.label,\n          children: \"Date of dispatch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          name: \"Startdate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: s.button,\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n} // Phonebook.propTypes = {\n//  onAddContact: PropTypes.func.isRequired,\n// };\n\n_s(Phonebook, \"nz3k5bcWOIVt4IUfFUaxfzvRTRg=\", false, function () {\n  return [useDispatch, useGetDeliveryQuery, useAddDeliveryMutation];\n});\n\n_c = Phonebook;\n\nvar _c;\n\n$RefreshReg$(_c, \"Phonebook\");","map":{"version":3,"sources":["/Users/staschekhov/Desktop/Probnoe/test-delivery-products/src/components/Phonebook.jsx"],"names":["React","useState","s","nanoid","useDispatch","useAddDeliveryMutation","useGetDeliveryQuery","Phonebook","dispatch","name","setName","from","setFrom","to","setTo","type","setType","data","error","isLoading","refetch","addContact","result","onSaveContact","contact","find","item","toLowerCase","alert","id","handleSubmit","e","preventDefault","form","div","label","input","target","value","checks","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import PropTypes from \"prop-types\";\nimport s from \"./Phonebook.module.css\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport { useAddDeliveryMutation, useGetDeliveryQuery } from \"redux/deliveryApi\";\n\nexport default function Phonebook() {\n const dispatch = useDispatch();\n\n const [name, setName] = useState(\"\");\n //  const [number, setNumber] = useState(\"\");\n const [from, setFrom] = useState(\"\");\n const [to, setTo] = useState(\"\");\n const [type, setType] = useState(\"\");\n\n const { data = [], error, isLoading, refetch } = useGetDeliveryQuery();\n const [addContact, result] = useAddDeliveryMutation();\n\n const onSaveContact = async () => {\n  const contact = {\n   name,\n   from,\n   to,\n  };\n\n  if (\n   data.find((item) => item.name.toLowerCase() === contact.name.toLowerCase())\n  ) {\n   return alert(`Contact ${name} already exists`);\n  }\n  await addContact({ id: nanoid(), name });\n };\n\n const handleSubmit = (e) => {\n  e.preventDefault();\n  onSaveContact();\n  setName(\"\");\n  setFrom(\"\");\n  setTo(\"\");\n };\n\n return (\n  <>\n   <form onSubmit={handleSubmit} className={s.form}>\n    <div className={s.div}>\n     <label className={s.label}>Name</label>\n     <input\n      className={s.input}\n      id={nanoid()}\n      type=\"text\"\n      value={name}\n      onChange={(e) => setName(e.target.value)}\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      placeholder=\"Ivan Dudka\"\n     />\n     <label className={s.label}>From</label>\n     <input\n      className={s.input}\n      type=\"text\"\n      value={from}\n      onChange={(e) => setFrom(e.target.value)}\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      placeholder=\"City:\"\n     />\n     <label className={s.label}>To</label>\n     <input\n      className={s.input}\n      type=\"text\"\n      value={to}\n      onChange={(e) => setTo(e.target.value)}\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      placeholder=\"City:\"\n     />\n     <div className={s.checks}>\n      <p>\n       <input type=\"radio\" id=\"test1\" name=\"radio-group\" />\n       <label for=\"test1\">Apple</label>\n      </p>\n      <p>\n       <input type=\"radio\" id=\"test2\" name=\"radio-group\" />\n       <label for=\"test2\">Peach</label>\n      </p>\n      <p>\n       <input type=\"radio\" id=\"test3\" name=\"radio-group\" />\n       <label for=\"test3\">Orange</label>\n      </p>\n      <p>\n       <input type=\"radio\" id=\"test3\" name=\"radio-group\" />\n       <label for=\"test3\">Orange</label>\n      </p>\n     </div>\n     {/* <label for=\"types\">Choose a type:</label>\n     <select name=\"types\" className={s.input}>\n      <option value=\"Clothes\">Clothes</option>\n      <option value=\"Drinks\">Drinks</option>\n      <option value=\"Gadgets\">Gadgets</option>\n      <option value=\"Other\">Other</option>\n     </select> */}\n     <label className={s.label}>Date of dispatch</label>\n     <input type=\"datetime-local\" name=\"Startdate\" />\n     {/* <label className={s.label}>Phone</label>\n     <input\n      className={s.input}\n      type=\"tel\"\n      value={number}\n      onChange={(e) => setNumber(e.target.value)}\n      name=\"number\"\n      pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n      title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n      required\n      placeholder=\"+380\"\n     /> */}\n     <button type=\"submit\" className={s.button}>\n      Add contact\n     </button>\n    </div>\n   </form>\n  </>\n );\n}\n\n// Phonebook.propTypes = {\n//  onAddContact: PropTypes.func.isRequired,\n// };\n"]},"metadata":{},"sourceType":"module"}