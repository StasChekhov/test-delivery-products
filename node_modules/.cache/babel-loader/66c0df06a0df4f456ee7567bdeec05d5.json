{"ast":null,"code":"var _jsxFileName = \"/Users/staschekhov/Desktop/Probnoe/test-delivery-products/src/components/DeliveryForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import PropTypes from \"prop-types\";\n\nimport s from \"./Delivery.module.css\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport { useAddDeliveryMutation, useGetDeliveryQuery } from \"redux/deliveryApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Phonebook(_ref) {\n  _s();\n\n  let {\n    formData\n  } = _ref;\n  const dispatch = useDispatch();\n  const [name, setName] = useState(formData.name);\n  const [from, setFrom] = useState(formData.from);\n  const [to, setTo] = useState(formData.to);\n  const [radio, setRadio] = useState(formData.radio);\n  const [time, setTime] = useState(formData.time);\n  const [comment, setComment] = useState(formData.comment);\n  console.log(comment);\n  const {\n    data = [],\n    error,\n    isLoading,\n    refetch\n  } = useGetDeliveryQuery();\n  const [addContact, result] = useAddDeliveryMutation();\n\n  const onSaveContact = async () => {\n    const contact = {\n      name,\n      from,\n      to,\n      radio,\n      time,\n      comment\n    };\n\n    if (data.find(item => item.name.toLowerCase() === contact.name.toLowerCase())) {\n      return alert(`Contact ${name} already exists`);\n    }\n\n    await addContact({\n      id: nanoid(),\n      name,\n      from,\n      to,\n      radio,\n      time,\n      comment\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSaveContact();\n    setName(\"\");\n    setFrom(\"\");\n    setTo(\"\");\n    setTime(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: s.form,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.div,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.label,\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          id: nanoid(),\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          placeholder: \"Ivan Dudka\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.label,\n          children: \"From\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          type: \"text\",\n          value: from,\n          onChange: e => setFrom(e.target.value),\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          placeholder: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.label,\n          children: \"To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          type: \"text\",\n          value: to,\n          onChange: e => setTo(e.target.value),\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          placeholder: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.label,\n          children: \"Choose type of your item:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.checks,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"test1\",\n              name: \"radio-group\",\n              value: radio === \"Gadgets\",\n              onChange: () => setRadio(\"Gadgets\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"test1\",\n              children: \"Gadgets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"test2\",\n              name: \"radio-group\",\n              value: radio === \"Drinks\",\n              onChange: () => setRadio(\"Drinks\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"test2\",\n              children: \"Drinks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"test3\",\n              name: \"radio-group\",\n              value: radio === \"Clothes\",\n              onChange: () => setRadio(\"Clothes\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"test3\",\n              children: \"Clothes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"test3\",\n              name: \"radio-group\",\n              value: radio === \"Apple\",\n              onChange: () => setRadio(\"Apple\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"test3\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.label,\n          children: \"Date of dispatch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          name: \"Startdate\",\n          value: time,\n          onChange: e => setTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"comment\",\n          className: s.label,\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"comment\",\n          name: \"comment\",\n          rows: \"4\",\n          cols: \"50\",\n          value: comment,\n          onChange: e => setComment(e.target.value),\n          placeholder: \"Write some details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: s.button,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\n_s(Phonebook, \"Nu/CXMZiPgAB/FCXfREdJDKhpWA=\", false, function () {\n  return [useDispatch, useGetDeliveryQuery, useAddDeliveryMutation];\n});\n\n_c = Phonebook;\nPhonebook.defaultProps = {\n  formData: {\n    name: \"\",\n    from: \"\",\n    to: \"\",\n    radio: \"\",\n    time: \"\",\n    comment: \"\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Phonebook\");","map":{"version":3,"sources":["/Users/staschekhov/Desktop/Probnoe/test-delivery-products/src/components/DeliveryForm.jsx"],"names":["React","useState","s","nanoid","useDispatch","useAddDeliveryMutation","useGetDeliveryQuery","Phonebook","formData","dispatch","name","setName","from","setFrom","to","setTo","radio","setRadio","time","setTime","comment","setComment","console","log","data","error","isLoading","refetch","addContact","result","onSaveContact","contact","find","item","toLowerCase","alert","id","handleSubmit","e","preventDefault","form","div","label","input","target","value","checks","button","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import PropTypes from \"prop-types\";\nimport s from \"./Delivery.module.css\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport { useAddDeliveryMutation, useGetDeliveryQuery } from \"redux/deliveryApi\";\n\nexport default function Phonebook({ formData }) {\n const dispatch = useDispatch();\n const [name, setName] = useState(formData.name);\n\n const [from, setFrom] = useState(formData.from);\n const [to, setTo] = useState(formData.to);\n const [radio, setRadio] = useState(formData.radio);\n const [time, setTime] = useState(formData.time);\n const [comment, setComment] = useState(formData.comment);\n console.log(comment);\n\n const { data = [], error, isLoading, refetch } = useGetDeliveryQuery();\n const [addContact, result] = useAddDeliveryMutation();\n\n const onSaveContact = async () => {\n  const contact = {\n   name,\n   from,\n   to,\n   radio,\n   time,\n   comment,\n  };\n\n  if (\n   data.find((item) => item.name.toLowerCase() === contact.name.toLowerCase())\n  ) {\n   return alert(`Contact ${name} already exists`);\n  }\n  await addContact({ id: nanoid(), name, from, to, radio, time, comment });\n };\n\n const handleSubmit = (e) => {\n  e.preventDefault();\n  onSaveContact();\n  setName(\"\");\n  setFrom(\"\");\n  setTo(\"\");\n  setTime(\"\");\n };\n\n return (\n  <>\n   <form onSubmit={handleSubmit} className={s.form}>\n    <div className={s.div}>\n     <label className={s.label}>Name</label>\n     <input\n      className={s.input}\n      id={nanoid()}\n      type=\"text\"\n      value={name}\n      onChange={(e) => setName(e.target.value)}\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      placeholder=\"Ivan Dudka\"\n     />\n     <label className={s.label}>From</label>\n     <input\n      className={s.input}\n      type=\"text\"\n      value={from}\n      onChange={(e) => setFrom(e.target.value)}\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      placeholder=\"City:\"\n     />\n     <label className={s.label}>To</label>\n     <input\n      className={s.input}\n      type=\"text\"\n      value={to}\n      onChange={(e) => setTo(e.target.value)}\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      placeholder=\"City:\"\n     />\n     <label className={s.label}>Choose type of your item:</label>\n     <div className={s.checks}>\n      <p>\n       <input\n        type=\"radio\"\n        id=\"test1\"\n        name=\"radio-group\"\n        value={radio === \"Gadgets\"}\n        onChange={() => setRadio(\"Gadgets\")}\n       />\n       <label for=\"test1\">Gadgets</label>\n      </p>\n      <p>\n       <input\n        type=\"radio\"\n        id=\"test2\"\n        name=\"radio-group\"\n        value={radio === \"Drinks\"}\n        onChange={() => setRadio(\"Drinks\")}\n       />\n       <label for=\"test2\">Drinks</label>\n      </p>\n      <p>\n       <input\n        type=\"radio\"\n        id=\"test3\"\n        name=\"radio-group\"\n        value={radio === \"Clothes\"}\n        onChange={() => setRadio(\"Clothes\")}\n       />\n       <label for=\"test3\">Clothes</label>\n      </p>\n      <p>\n       <input\n        type=\"radio\"\n        id=\"test3\"\n        name=\"radio-group\"\n        value={radio === \"Apple\"}\n        onChange={() => setRadio(\"Apple\")}\n       />\n       <label for=\"test3\">Other</label>\n      </p>\n     </div>\n\n     <label className={s.label}>Date of dispatch</label>\n     <input\n      type=\"datetime-local\"\n      name=\"Startdate\"\n      value={time}\n      onChange={(e) => setTime(e.target.value)}\n     />\n\n     <label for=\"comment\" className={s.label}>\n      Comments:\n     </label>\n     <textarea\n      id=\"comment\"\n      name=\"comment\"\n      rows=\"4\"\n      cols=\"50\"\n      value={comment}\n      onChange={(e) => setComment(e.target.value)}\n      placeholder=\"Write some details\"\n     ></textarea>\n     <button type=\"submit\" className={s.button}>\n      Add\n     </button>\n    </div>\n   </form>\n  </>\n );\n}\n\nPhonebook.defaultProps = {\n formData: {\n  name: \"\",\n  from: \"\",\n  to: \"\",\n  radio: \"\",\n  time: \"\",\n  comment: \"\",\n },\n};\n"]},"metadata":{},"sourceType":"module"}