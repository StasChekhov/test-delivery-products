{"ast":null,"code":"var _jsxFileName = \"/Users/staschekhov/Desktop/Probnoe/test-delivery-products/src/components/DeliveryForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import PropTypes from \"prop-types\";\n\nimport s from \"./Delivery.module.css\";\nimport { nanoid } from \"@reduxjs/toolkit\"; // import { useDispatch } from \"react-redux\";\n\nimport { useAddDeliveryMutation, useGetDeliveryQuery, useUpdateDeliveryMutation, useGetDeliveryByIdQuery } from \"redux/deliveryApi\";\nimport * as API from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DeliveryForm(_ref) {\n  _s();\n\n  let {\n    formData,\n    isChange,\n    onClose\n  } = _ref;\n  //  const dispatch = useDispatch();\n  const [name, setName] = useState(formData.name);\n  const [from, setFrom] = useState(formData.from);\n  const [to, setTo] = useState(formData.to);\n  const [radio, setRadio] = useState(formData.radio);\n  const [time, setTime] = useState(formData.time);\n  const [comment, setComment] = useState(formData.comment); //  console.log(formData.id);\n\n  const {\n    data = [],\n    error,\n    isLoading,\n    refetch\n  } = useGetDeliveryQuery();\n  const [addContact, result] = useAddDeliveryMutation(data); //  const {} = useGetDeliveryByIdQuery(formData.id);\n  //  const { updateMaterial } = useUpdateDeliveryMutation();\n  //  console.log(updateMaterial);\n\n  const onSaveContact = async () => {\n    const contact = {\n      name,\n      from,\n      to,\n      radio,\n      time,\n      comment\n    };\n\n    if (data.find(item => item.name.toLowerCase() === contact.name.toLowerCase())) {\n      return alert(`Contact ${name} already exists`);\n    }\n\n    await addContact({\n      id: nanoid(),\n      name,\n      from,\n      to,\n      radio,\n      time,\n      comment\n    });\n  };\n\n  const onUpdateMaterial = async fields => {\n    try {\n      await API.updateMaterial({\n        id: formData.id,\n        ...fields\n      });\n    } catch (error) {}\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isChange) {\n      // изменерие контакta\n      onUpdateMaterial();\n      onClose();\n    } else {\n      onSaveContact();\n    }\n\n    setName(\"\");\n    setFrom(\"\");\n    setTo(\"\");\n    setTime(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: s.form,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.div,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.label,\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          id: nanoid(),\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          placeholder: \"Ivan Dudka\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.label,\n          children: \"From\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          type: \"text\",\n          value: from,\n          onChange: e => setFrom(e.target.value),\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          placeholder: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.label,\n          children: \"To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          type: \"text\",\n          value: to,\n          onChange: e => setTo(e.target.value),\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n          required: true,\n          placeholder: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.label,\n          children: \"Choose type of your item:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.checks,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"test1\",\n              name: \"radio-group\",\n              checked: radio === \"Gadgets\",\n              onChange: () => setRadio(\"Gadgets\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"test1\",\n              children: \"Gadgets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"test2\",\n              name: \"radio-group\",\n              checked: radio === \"Drinks\",\n              onChange: () => setRadio(\"Drinks\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"test2\",\n              children: \"Drinks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"test3\",\n              name: \"radio-group\",\n              checked: radio === \"Clothes\",\n              onChange: () => setRadio(\"Clothes\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"test3\",\n              children: \"Clothes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"test3\",\n              name: \"radio-group\",\n              checked: radio === \"Apple\",\n              onChange: () => setRadio(\"Apple\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"test3\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.label,\n          children: \"Date of dispatch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          name: \"Startdate\",\n          value: time,\n          onChange: e => setTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"comment\",\n          className: s.label,\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"comment\",\n          name: \"comment\",\n          rows: \"4\",\n          cols: \"50\",\n          value: comment,\n          onChange: e => setComment(e.target.value),\n          placeholder: \"Write some details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 6\n        }, this), isChange ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: s.buttonUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: s.button,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\n_s(DeliveryForm, \"zEOhL2TvQ/UciD5BHKXGZL1H1cI=\", false, function () {\n  return [useGetDeliveryQuery, useAddDeliveryMutation];\n});\n\n_c = DeliveryForm;\nDeliveryForm.defaultProps = {\n  formData: {\n    name: \"\",\n    from: \"\",\n    to: \"\",\n    radio: \"\",\n    time: \"\",\n    comment: \"\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryForm\");","map":{"version":3,"sources":["/Users/staschekhov/Desktop/Probnoe/test-delivery-products/src/components/DeliveryForm.jsx"],"names":["React","useState","s","nanoid","useAddDeliveryMutation","useGetDeliveryQuery","useUpdateDeliveryMutation","useGetDeliveryByIdQuery","API","DeliveryForm","formData","isChange","onClose","name","setName","from","setFrom","to","setTo","radio","setRadio","time","setTime","comment","setComment","data","error","isLoading","refetch","addContact","result","onSaveContact","contact","find","item","toLowerCase","alert","id","onUpdateMaterial","fields","updateMaterial","handleSubmit","e","preventDefault","form","div","label","input","target","value","checks","buttonUpdate","button","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import PropTypes from \"prop-types\";\nimport s from \"./Delivery.module.css\";\nimport { nanoid } from \"@reduxjs/toolkit\";\n// import { useDispatch } from \"react-redux\";\nimport {\n useAddDeliveryMutation,\n useGetDeliveryQuery,\n useUpdateDeliveryMutation,\n useGetDeliveryByIdQuery,\n} from \"redux/deliveryApi\";\nimport * as API from \"../api/api\";\n\nexport default function DeliveryForm({ formData, isChange, onClose }) {\n //  const dispatch = useDispatch();\n const [name, setName] = useState(formData.name);\n\n const [from, setFrom] = useState(formData.from);\n const [to, setTo] = useState(formData.to);\n const [radio, setRadio] = useState(formData.radio);\n const [time, setTime] = useState(formData.time);\n const [comment, setComment] = useState(formData.comment);\n //  console.log(formData.id);\n\n const { data = [], error, isLoading, refetch } = useGetDeliveryQuery();\n const [addContact, result] = useAddDeliveryMutation(data);\n //  const {} = useGetDeliveryByIdQuery(formData.id);\n //  const { updateMaterial } = useUpdateDeliveryMutation();\n //  console.log(updateMaterial);\n\n const onSaveContact = async () => {\n  const contact = {\n   name,\n   from,\n   to,\n   radio,\n   time,\n   comment,\n  };\n\n  if (\n   data.find((item) => item.name.toLowerCase() === contact.name.toLowerCase())\n  ) {\n   return alert(`Contact ${name} already exists`);\n  }\n  await addContact({ id: nanoid(), name, from, to, radio, time, comment });\n };\n\n const onUpdateMaterial = async (fields) => {\n  try {\n   await API.updateMaterial({ id: formData.id, ...fields });\n  } catch (error) {}\n };\n\n const handleSubmit = (e) => {\n  e.preventDefault();\n  if (isChange) {\n   // изменерие контакta\n   onUpdateMaterial();\n\n   onClose();\n  } else {\n   onSaveContact();\n  }\n  setName(\"\");\n  setFrom(\"\");\n  setTo(\"\");\n  setTime(\"\");\n };\n\n return (\n  <>\n   <form onSubmit={handleSubmit} className={s.form}>\n    <div className={s.div}>\n     <label className={s.label}>Name</label>\n     <input\n      className={s.input}\n      id={nanoid()}\n      type=\"text\"\n      value={name}\n      onChange={(e) => setName(e.target.value)}\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      placeholder=\"Ivan Dudka\"\n     />\n     <label className={s.label}>From</label>\n     <input\n      className={s.input}\n      type=\"text\"\n      value={from}\n      onChange={(e) => setFrom(e.target.value)}\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      placeholder=\"City:\"\n     />\n     <label className={s.label}>To</label>\n     <input\n      className={s.input}\n      type=\"text\"\n      value={to}\n      onChange={(e) => setTo(e.target.value)}\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      placeholder=\"City:\"\n     />\n     <label className={s.label}>Choose type of your item:</label>\n     <div className={s.checks}>\n      <p>\n       <input\n        type=\"radio\"\n        id=\"test1\"\n        name=\"radio-group\"\n        checked={radio === \"Gadgets\"}\n        onChange={() => setRadio(\"Gadgets\")}\n       />\n       <label for=\"test1\">Gadgets</label>\n      </p>\n      <p>\n       <input\n        type=\"radio\"\n        id=\"test2\"\n        name=\"radio-group\"\n        checked={radio === \"Drinks\"}\n        onChange={() => setRadio(\"Drinks\")}\n       />\n       <label for=\"test2\">Drinks</label>\n      </p>\n      <p>\n       <input\n        type=\"radio\"\n        id=\"test3\"\n        name=\"radio-group\"\n        checked={radio === \"Clothes\"}\n        onChange={() => setRadio(\"Clothes\")}\n       />\n       <label for=\"test3\">Clothes</label>\n      </p>\n      <p>\n       <input\n        type=\"radio\"\n        id=\"test3\"\n        name=\"radio-group\"\n        checked={radio === \"Apple\"}\n        onChange={() => setRadio(\"Apple\")}\n       />\n       <label for=\"test3\">Other</label>\n      </p>\n     </div>\n\n     <label className={s.label}>Date of dispatch</label>\n     <input\n      type=\"datetime-local\"\n      name=\"Startdate\"\n      value={time}\n      onChange={(e) => setTime(e.target.value)}\n     />\n\n     <label for=\"comment\" className={s.label}>\n      Comments:\n     </label>\n     <textarea\n      id=\"comment\"\n      name=\"comment\"\n      rows=\"4\"\n      cols=\"50\"\n      value={comment}\n      onChange={(e) => setComment(e.target.value)}\n      placeholder=\"Write some details\"\n     ></textarea>\n     {isChange ? (\n      <button type=\"submit\" className={s.buttonUpdate}>\n       Update\n      </button>\n     ) : (\n      <button type=\"submit\" className={s.button}>\n       Add\n      </button>\n     )}\n    </div>\n   </form>\n  </>\n );\n}\n\nDeliveryForm.defaultProps = {\n formData: {\n  name: \"\",\n  from: \"\",\n  to: \"\",\n  radio: \"\",\n  time: \"\",\n  comment: \"\",\n },\n};\n"]},"metadata":{},"sourceType":"module"}