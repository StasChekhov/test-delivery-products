{"ast":null,"code":"import _slicedToArray from\"/Users/staschekhov/Desktop/Probnoe/test-delivery-products/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import s from\"./Delivery.module.css\";import{useDispatch}from\"react-redux\";import{useDeleteDeliveryMutation}from\"redux/deliveryApi\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ContactItems=function ContactItems(_ref){var id=_ref.id,name=_ref.name,from=_ref.from,to=_ref.to,radio=_ref.radio,time=_ref.time,comment=_ref.comment,handle=_ref.handle;var dispatch=useDispatch();var _useDeleteDeliveryMut=useDeleteDeliveryMutation(),_useDeleteDeliveryMut2=_slicedToArray(_useDeleteDeliveryMut,2),deleteContact=_useDeleteDeliveryMut2[0],result=_useDeleteDeliveryMut2[1];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:s.contactBlock,children:[/*#__PURE__*/_jsx(\"span\",{className:s.contactName,children:name}),/*#__PURE__*/_jsxs(\"span\",{className:s.contactPhone,children:[\"From: \",from]}),/*#__PURE__*/_jsxs(\"span\",{className:s.contactPhone,children:[\"To: \",to]}),/*#__PURE__*/_jsxs(\"span\",{className:s.contactPhone,children:[\"Radio: \",radio]}),/*#__PURE__*/_jsxs(\"span\",{className:s.contactPhone,children:[\"Time: \",time]}),/*#__PURE__*/_jsxs(\"span\",{className:s.contactPhone,children:[\"Comment: \",comment]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",\"data-id\":id,className:s.update,onClick:handle,children:\"Change\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",\"data-id\":id,className:s.delete,onClick:function onClick(){return deleteContact(id);},children:\"Delete\"})]})});};// onClick={() => dispatch(remove({ id }))}\nexport default ContactItems;// ContactItems.propTypes = {\n//  id: PropTypes.string.isRequired,\n//  name: PropTypes.string.isRequired,\n//  number: PropTypes.string.isRequired,\n//  //   onDelete: PropTypes.func.isRequired,\n// };","map":{"version":3,"sources":["/Users/staschekhov/Desktop/Probnoe/test-delivery-products/src/components/Items.jsx"],"names":["s","useDispatch","useDeleteDeliveryMutation","ContactItems","id","name","from","to","radio","time","comment","handle","dispatch","deleteContact","result","contactBlock","contactName","contactPhone","update","delete"],"mappings":"+IACA,MAAOA,CAAAA,CAAP,KAAc,uBAAd,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,yBAAT,KAA0C,mBAA1C,C,6IAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA0D,IAAvDC,CAAAA,EAAuD,MAAvDA,EAAuD,CAAnDC,IAAmD,MAAnDA,IAAmD,CAA7CC,IAA6C,MAA7CA,IAA6C,CAAvCC,EAAuC,MAAvCA,EAAuC,CAAnCC,KAAmC,MAAnCA,KAAmC,CAA5BC,IAA4B,MAA5BA,IAA4B,CAAtBC,OAAsB,MAAtBA,OAAsB,CAAbC,MAAa,MAAbA,MAAa,CAC9E,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CACA,0BAAgCC,yBAAyB,EAAzD,gEAAOW,aAAP,2BAAsBC,MAAtB,2BAEA,mBACC,sCACC,aAAK,SAAS,CAAEd,CAAC,CAACe,YAAlB,wBACC,aAAM,SAAS,CAAEf,CAAC,CAACgB,WAAnB,UAAiCX,IAAjC,EADD,cAEC,cAAM,SAAS,CAAEL,CAAC,CAACiB,YAAnB,oBAAwCX,IAAxC,GAFD,cAGC,cAAM,SAAS,CAAEN,CAAC,CAACiB,YAAnB,kBAAsCV,EAAtC,GAHD,cAIC,cAAM,SAAS,CAAEP,CAAC,CAACiB,YAAnB,qBAAyCT,KAAzC,GAJD,cAKC,cAAM,SAAS,CAAER,CAAC,CAACiB,YAAnB,oBAAwCR,IAAxC,GALD,cAMC,cAAM,SAAS,CAAET,CAAC,CAACiB,YAAnB,uBAA2CP,OAA3C,GAND,cAOC,eAAQ,IAAI,CAAC,QAAb,CAAsB,UAASN,EAA/B,CAAmC,SAAS,CAAEJ,CAAC,CAACkB,MAAhD,CAAwD,OAAO,CAAEP,MAAjE,oBAPD,cAUC,eACC,IAAI,CAAC,QADN,CAEC,UAASP,EAFV,CAGC,SAAS,CAAEJ,CAAC,CAACmB,MAHd,CAIC,OAAO,CAAE,yBAAMN,CAAAA,aAAa,CAACT,EAAD,CAAnB,EAJV,oBAVD,GADD,EADD,CAuBA,CA3BD,CA4BA;AACA,cAAeD,CAAAA,YAAf,CAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import PropTypes from \"prop-types\";\nimport s from \"./Delivery.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { useDeleteDeliveryMutation } from \"redux/deliveryApi\";\n\nconst ContactItems = ({ id, name, from, to, radio, time, comment, handle }) => {\n const dispatch = useDispatch();\n const [deleteContact, result] = useDeleteDeliveryMutation();\n\n return (\n  <>\n   <div className={s.contactBlock}>\n    <span className={s.contactName}>{name}</span>\n    <span className={s.contactPhone}>From: {from}</span>\n    <span className={s.contactPhone}>To: {to}</span>\n    <span className={s.contactPhone}>Radio: {radio}</span>\n    <span className={s.contactPhone}>Time: {time}</span>\n    <span className={s.contactPhone}>Comment: {comment}</span>\n    <button type=\"button\" data-id={id} className={s.update} onClick={handle}>\n     Change\n    </button>\n    <button\n     type=\"button\"\n     data-id={id}\n     className={s.delete}\n     onClick={() => deleteContact(id)}\n    >\n     Delete\n    </button>\n   </div>\n  </>\n );\n};\n// onClick={() => dispatch(remove({ id }))}\nexport default ContactItems;\n\n// ContactItems.propTypes = {\n//  id: PropTypes.string.isRequired,\n//  name: PropTypes.string.isRequired,\n//  number: PropTypes.string.isRequired,\n//  //   onDelete: PropTypes.func.isRequired,\n// };\n"]},"metadata":{},"sourceType":"module"}