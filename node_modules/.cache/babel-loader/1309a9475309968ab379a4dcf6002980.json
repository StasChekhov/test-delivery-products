{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";export var clickSlice=createSlice({name:\"myValue\",initialState:{filter:\"\"},reducers:{//   add(state, action) {\n//    state.contacts.items.push(action.payload);\n//   },\n//   remove(state, action) {\n//    //    state.contacts.items.splice(0, action.payload);\n//    state.contacts.items = state.contacts.items.filter(\n//     (element) => element.id !== action.payload.id\n//    );\n//   },\nfilterContacts:function filterContacts(state,action){state.filter=action.payload.text;}}});// export const { add } = clickSlice.actions;\n// export const { remove } = clickSlice.actions;\nvar filterContacts=clickSlice.actions.filterContacts;export{filterContacts};export var contactsSliceReducer=clickSlice.reducer;//Selectors\n// export const getContacts = (state) => state.myValue.contacts.items;\nexport var getFilter=function getFilter(state){return state.myValue.filter;};","map":{"version":3,"sources":["/Users/staschekhov/Desktop/Probnoe/test-delivery-products/src/redux/clickSlice.js"],"names":["createSlice","clickSlice","name","initialState","filter","reducers","filterContacts","state","action","payload","text","actions","contactsSliceReducer","reducer","getFilter","myValue"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAGD,WAAW,CAAC,CACrCE,IAAI,CAAE,SAD+B,CAErCC,YAAY,CAAE,CACbC,MAAM,CAAE,EADK,CAFuB,CAKrCC,QAAQ,CAAE,CACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,cAVS,yBAUMC,KAVN,CAUaC,MAVb,CAUqB,CAC7BD,KAAK,CAACH,MAAN,CAAeI,MAAM,CAACC,OAAP,CAAeC,IAA9B,CACA,CAZQ,CAL2B,CAAD,CAA9B,CAoBP;AACA;AACO,GAAQJ,CAAAA,cAAR,CAA2BL,UAAU,CAACU,OAAtC,CAAQL,cAAR,C,uBAEP,MAAO,IAAMM,CAAAA,oBAAoB,CAAGX,UAAU,CAACY,OAAxC,CAEP;AACA;AACA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACP,KAAD,CAAW,CACnC,MAAOA,CAAAA,KAAK,CAACQ,OAAN,CAAcX,MAArB,CACA,CAFM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const clickSlice = createSlice({\n name: \"myValue\",\n initialState: {\n  filter: \"\",\n },\n reducers: {\n  //   add(state, action) {\n  //    state.contacts.items.push(action.payload);\n  //   },\n  //   remove(state, action) {\n  //    //    state.contacts.items.splice(0, action.payload);\n  //    state.contacts.items = state.contacts.items.filter(\n  //     (element) => element.id !== action.payload.id\n  //    );\n  //   },\n  filterContacts(state, action) {\n   state.filter = action.payload.text;\n  },\n },\n});\n// export const { add } = clickSlice.actions;\n// export const { remove } = clickSlice.actions;\nexport const { filterContacts } = clickSlice.actions;\n\nexport const contactsSliceReducer = clickSlice.reducer;\n\n//Selectors\n// export const getContacts = (state) => state.myValue.contacts.items;\nexport const getFilter = (state) => {\n return state.myValue.filter;\n};\n"]},"metadata":{},"sourceType":"module"}