{"ast":null,"code":"import ContactItems from\"./ContactItems\";import s from\"./Phonebook.module.css\";// import PropTypes from \"prop-types\";\nimport{useMemo}from\"react\";import{getFilter}from\"redux/clickSlice\";import{useSelector}from\"react-redux\";import{useGetContactsQuery}from\"redux/contactsApi\";import{jsx as _jsx}from\"react/jsx-runtime\";var ContactList=function ContactList(){var filter=useSelector(getFilter);var _useGetContactsQuery=useGetContactsQuery(),_useGetContactsQuery$=_useGetContactsQuery.data,data=_useGetContactsQuery$===void 0?[]:_useGetContactsQuery$,error=_useGetContactsQuery.error,isLoading=_useGetContactsQuery.isLoading;var filteredContacts=useMemo(function(){return filter?data.filter(function(contact){return contact.name.includes(filter);}):data;},[filter,data]);//  const filteredContacts = (data, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n//   return data.filter((contact) =>\n//    contact.name.toLowerCase().includes(normalizedFilter)\n//   );\n//  };\nreturn/*#__PURE__*/_jsx(\"ul\",{children:filteredContacts.map(function(e){return/*#__PURE__*/_jsx(\"li\",{className:s.contact,children:/*#__PURE__*/_jsx(ContactItems,{id:e.id,name:e.name,number:e.number})},e.id);})});};export default ContactList;// ContactList.propTypes = {\n//  listContacts: PropTypes.arrayOf(\n//   PropTypes.shape({\n//    id: PropTypes.string.isRequired,\n//    name: PropTypes.string.isRequired,\n//    number: PropTypes.string.isRequired,\n//   })\n//  ),\n//  // onDelete: PropTypes.func.isRequired,\n// };","map":{"version":3,"sources":["/Users/staschekhov/Desktop/React /HW7/contacts_phonebook/src/components/ContactList.jsx"],"names":["ContactItems","s","useMemo","getFilter","useSelector","useGetContactsQuery","ContactList","filter","data","error","isLoading","filteredContacts","contact","name","includes","map","e","id","number"],"mappings":"AAAA,MAAOA,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,CAAP,KAAc,wBAAd,CACA;AACA,OAASC,OAAT,KAAwB,OAAxB,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,mBAAT,KAAoC,mBAApC,C,2CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACzB,GAAMC,CAAAA,MAAM,CAAGH,WAAW,CAACD,SAAD,CAA1B,CACA,yBAAwCE,mBAAmB,EAA3D,4CAAQG,IAAR,CAAQA,IAAR,gCAAe,EAAf,uBAAmBC,KAAnB,sBAAmBA,KAAnB,CAA0BC,SAA1B,sBAA0BA,SAA1B,CACA,GAAMC,CAAAA,gBAAgB,CAAGT,OAAO,CAC/B,iBACCK,CAAAA,MAAM,CAAGC,IAAI,CAACD,MAAL,CAAY,SAACK,OAAD,QAAaA,CAAAA,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBP,MAAtB,CAAb,EAAZ,CAAH,CAA6DC,IADpE,EAD+B,CAG/B,CAACD,MAAD,CAASC,IAAT,CAH+B,CAAhC,CAKA;AACA;AACA;AACA;AACA;AACA;AACA,mBACC,oBACEG,gBAAgB,CAACI,GAAjB,CAAqB,SAACC,CAAD,qBACrB,WAAe,SAAS,CAAEf,CAAC,CAACW,OAA5B,uBACC,KAAC,YAAD,EAAc,EAAE,CAAEI,CAAC,CAACC,EAApB,CAAwB,IAAI,CAAED,CAAC,CAACH,IAAhC,CAAsC,MAAM,CAAEG,CAAC,CAACE,MAAhD,EADD,EAASF,CAAC,CAACC,EAAX,CADqB,EAArB,CADF,EADD,CASA,CAvBD,CAyBA,cAAeX,CAAAA,WAAf,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ContactItems from \"./ContactItems\";\nimport s from \"./Phonebook.module.css\";\n// import PropTypes from \"prop-types\";\nimport { useMemo } from \"react\";\nimport { getFilter } from \"redux/clickSlice\";\nimport { useSelector } from \"react-redux\";\nimport { useGetContactsQuery } from \"redux/contactsApi\";\n\nconst ContactList = () => {\n const filter = useSelector(getFilter);\n const { data = [], error, isLoading } = useGetContactsQuery();\n const filteredContacts = useMemo(\n  () =>\n   filter ? data.filter((contact) => contact.name.includes(filter)) : data,\n  [filter, data]\n );\n //  const filteredContacts = (data, filter) => {\n //   const normalizedFilter = filter.toLowerCase();\n //   return data.filter((contact) =>\n //    contact.name.toLowerCase().includes(normalizedFilter)\n //   );\n //  };\n return (\n  <ul>\n   {filteredContacts.map((e) => (\n    <li key={e.id} className={s.contact}>\n     <ContactItems id={e.id} name={e.name} number={e.number} />\n    </li>\n   ))}\n  </ul>\n );\n};\n\nexport default ContactList;\n\n// ContactList.propTypes = {\n//  listContacts: PropTypes.arrayOf(\n//   PropTypes.shape({\n//    id: PropTypes.string.isRequired,\n//    name: PropTypes.string.isRequired,\n//    number: PropTypes.string.isRequired,\n//   })\n//  ),\n//  // onDelete: PropTypes.func.isRequired,\n// };\n"]},"metadata":{},"sourceType":"module"}